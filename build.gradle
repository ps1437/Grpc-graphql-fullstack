buildscript {
	ext {
		protobufVersion = '3.19.1'
		protobufPluginVersion = '0.8.18'
		grpcVersion = '1.42.1'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.google.protobuf" version "0.9.4"

}

group = 'com.syshco.grpc'
version = '0.0.1-SNAPSHOT'
def grpcVersion = '1.36.0'
def protobufVersion = '3.14.0'
def protocVersion = protobufVersion
java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('io.grpc:grpc-stub:' + grpcVersion)
	implementation("io.grpc:grpc-core:${grpcVersion}")
	implementation('io.grpc:grpc-protobuf:' + grpcVersion)
	implementation("io.grpc:grpc-netty:${grpcVersion}")

	compileOnly('org.projectlombok:lombok')
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'


	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
	testImplementation 'io.grpc:grpc-testing:1.61.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.h2database:h2'

}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protocVersion}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		ofSourceSet('main').each { task ->
			task.builtins {
				java {
					outputSubDir = 'protoGen'
				}
			}
			task.plugins {
				grpc {
					outputSubDir = 'protoGen'
				}
			}
		}
	}
//	generatedFilesBaseDir = "$projectDir/src/"
}

tasks.register('cleanProtoGen') {
	doFirst {
		delete("$projectDir/src/main/protoGen")
	}
}
clean.dependsOn cleanProtoGen

clean.dependsOn cleanProtoGen


tasks.named('test') {
	useJUnitPlatform()
}
